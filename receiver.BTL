<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Digital Signature Receiver</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .header {
            background: linear-gradient(135deg, #2196F3, #1976D2);
            padding: 30px;
            text-align: center;
            color: white;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            font-weight: 300;
        }

        .header p {
            opacity: 0.9;
            font-size: 1.1rem;
        }

        .content {
            padding: 40px;
        }

        .section {
            margin-bottom: 30px;
            padding: 25px;
            background: #f8f9fa;
            border-radius: 15px;
            border-left: 4px solid #2196F3;
        }

        .section-title {
            font-size: 1.3rem;
            color: #333;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .section-title i {
            color: #2196F3;
        }

        .btn {
            background: linear-gradient(135deg, #2196F3, #1976D2);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 50px;
            cursor: pointer;
            font-size: 1rem;
            font-weight: 500;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            text-decoration: none;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(33, 150, 243, 0.3);
        }

        .btn:active {
            transform: translateY(0);
        }

        .btn-success {
            background: linear-gradient(135deg, #4CAF50, #45a049);
        }

        .btn-success:hover {
            box-shadow: 0 8px 25px rgba(76, 175, 80, 0.3);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            color: #555;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 15px;
            border: 2px solid #e0e0e0;
            border-radius: 10px;
            font-size: 1rem;
            transition: all 0.3s ease;
            font-family: 'Courier New', monospace;
            resize: vertical;
            background: #f8f9fa;
        }

        .form-control:focus {
            outline: none;
            border-color: #2196F3;
            box-shadow: 0 0 0 3px rgba(33, 150, 243, 0.1);
        }

        .waiting-state {
            text-align: center;
            padding: 40px 20px;
            color: #666;
        }

        .waiting-state i {
            font-size: 4rem;
            color: #ddd;
            margin-bottom: 20px;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 0.5; }
            50% { opacity: 1; }
            100% { opacity: 0.5; }
        }

        .file-info {
            background: #e3f2fd;
            border: 1px solid #bbdefb;
            border-radius: 10px;
            padding: 20px;
            margin: 20px 0;
        }

        .file-info-header {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 15px;
        }

        .file-icon {
            width: 50px;
            height: 50px;
            background: #2196F3;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
        }

        .file-details h3 {
            margin: 0;
            color: #1976D2;
        }

        .file-details p {
            margin: 0;
            color: #666;
            font-size: 0.9rem;
        }

        .file-preview {
            margin: 20px 0;
            text-align: center;
            border-radius: 10px;
            overflow: hidden;
            max-height: 400px;
        }

        .file-preview img {
            max-width: 100%;
            max-height: 400px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .download-btn {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            padding: 12px 24px;
            background: linear-gradient(135deg, #4CAF50, #45a049);
            color: white;
            text-decoration: none;
            border-radius: 50px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        .download-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(76, 175, 80, 0.3);
        }

        .verify-result {
            margin-top: 20px;
            padding: 20px;
            border-radius: 10px;
            display: none;
            align-items: center;
            gap: 15px;
            font-weight: 500;
        }

        .verify-result.valid {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
            display: flex;
        }

        .verify-result.invalid {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
            display: flex;
        }

        .verify-result.error {
            background: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
            display: flex;
        }

        .verify-icon {
            font-size: 1.5rem;
        }

        .loading {
            display: none;
            align-items: center;
            gap: 10px;
            color: #666;
            margin-top: 15px;
        }

        .loading.show {
            display: flex;
        }

        .spinner {
            width: 20px;
            height: 20px;
            border: 2px solid #f3f3f3;
            border-top: 2px solid #2196F3;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .actions {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
            margin-top: 20px;
        }

        @media (max-width: 768px) {
            .container {
                margin: 10px;
                border-radius: 15px;
            }
            
            .content {
                padding: 20px;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .file-info-header {
                flex-direction: column;
                text-align: center;
            }
            
            .actions {
                flex-direction: column;
            }
            
            .btn, .download-btn {
                justify-content: center;
            }
        }

        .status-indicator {
            display: inline-flex;
            align-items: center;
            gap: 5px;
            padding: 5px 10px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 500;
        }

        .status-connected {
            background: #d4edda;
            color: #155724;
        }

        .status-disconnected {
            background: #f8d7da;
            color: #721c24;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1><i class="fas fa-shield-alt"></i> Digital Signature Receiver</h1>
            <p>Receive and verify digitally signed files</p>
            <div style="margin-top: 15px;">
                <span id="connectionStatus" class="status-indicator status-disconnected">
                    <i class="fas fa-circle"></i> Disconnected
                </span>
            </div>
        </div>
        
        <div class="content">
            <!-- Waiting State -->
            <div id="waitingState" class="waiting-state">
                <i class="fas fa-inbox"></i>
                <h3>Waiting for files...</h3>
                <p>Files sent from the sender will appear here automatically</p>
            </div>

            <!-- Public Key Section -->
            <div id="keySection" class="section" style="display: none;">
                <div class="section-title">
                    <i class="fas fa-key"></i>
                    Sender's Public Key
                </div>
                
                <div class="form-group">
                    <label class="form-label">
                        <i class="fas fa-unlock"></i> Public Key (for verification)
                    </label>
                    <textarea 
                        class="form-control" 
                        id="pubKeyReceiver" 
                        rows="4" 
                        readonly
                        placeholder="Public key will appear here when file is received"
                    ></textarea>
                </div>
            </div>

            <!-- File Information Section -->
            <div id="fileSection" class="section" style="display: none;">
                <div class="section-title">
                    <i class="fas fa-file-alt"></i>
                    Received File
                </div>
                
                <div id="fileInfo"></div>
                <div id="filePreview" class="file-preview"></div>
                <div id="fileDownload" style="text-align: center; margin: 20px 0;"></div>
            </div>

            <!-- Verification Section -->
            <div id="verificationSection" class="section" style="display: none;">
                <div class="section-title">
                    <i class="fas fa-check-circle"></i>
                    Signature Verification
                </div>
                
                <p style="margin-bottom: 20px; color: #666;">
                    Verify the digital signature to ensure file authenticity and integrity
                </p>
                
                <div class="actions">
                    <button class="btn" onclick="verifySignature()">
                        <i class="fas fa-search"></i>
                        Verify Signature
                    </button>
                </div>
                
                <div class="loading" id="verifyLoading">
                    <div class="spinner"></div>
                    Verifying signature...
                </div>
                
                <div id="verifyResult" class="verify-result"></div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.4/socket.io.min.js"></script>
    <script src="{{ url_for('static', filename='script.js') }}"></script>
    
    <script>
        // Update connection status
        const connectionStatus = document.getElementById('connectionStatus');
        
        socket.on('connect', () => {
            connectionStatus.innerHTML = '<i class="fas fa-circle"></i> Connected';
            connectionStatus.className = 'status-indicator status-connected';
        });
        
        socket.on('disconnect', () => {
            connectionStatus.innerHTML = '<i class="fas fa-circle"></i> Disconnected';
            connectionStatus.className = 'status-indicator status-disconnected';
        });

        // Enhanced file receive handler
        const originalReceiveHandler = socket._callbacks['$receive_file'];
        socket.off('receive_file');
        
        socket.on('receive_file', (data) => {
            // Hide waiting state
            document.getElementById('waitingState').style.display = 'none';
            
            // Show sections
            document.getElementById('keySection').style.display = 'block';
            document.getElementById('fileSection').style.display = 'block';
            document.getElementById('verificationSection').style.display = 'block';
            
            // Call original handler
            if (originalReceiveHandler && originalReceiveHandler.length > 0) {
                originalReceiveHandler[0](data);
            }
            
            // Enhanced file info display
            const fileSize = Math.round(atob(data.fileData).length / 1024 * 100) / 100;
            const fileIcon = getFileIcon(data.fileType);
            
            document.getElementById('fileInfo').innerHTML = `
                <div class="file-info">
                    <div class="file-info-header">
                        <div class="file-icon">
                            <i class="fas ${fileIcon}"></i>
                        </div>
                        <div class="file-details">
                            <h3>${data.fileName}</h3>
                            <p><strong>Size:</strong> ${fileSize} KB</p>
                            <p><strong>Type:</strong> ${data.fileType || 'Unknown'}</p>
                            <p><strong>Received:</strong> ${new Date().toLocaleString()}</p>
                        </div>
                    </div>
                </div>
            `;
        });

        function getFileIcon(fileType) {
            if (!fileType) return 'fa-file';
            
            if (fileType.startsWith('image/')) return 'fa-file-image';
            if (fileType.startsWith('video/')) return 'fa-file-video';
            if (fileType.startsWith('audio/')) return 'fa-file-audio';
            if (fileType.includes('pdf')) return 'fa-file-pdf';
            if (fileType.includes('word')) return 'fa-file-word';
            if (fileType.includes('excel') || fileType.includes('spreadsheet')) return 'fa-file-excel';
            if (fileType.includes('powerpoint') || fileType.includes('presentation')) return 'fa-file-powerpoint';
            if (fileType.includes('zip') || fileType.includes('rar')) return 'fa-file-archive';
            if (fileType.includes('text')) return 'fa-file-alt';
            
            return 'fa-file';
        }

        // Enhanced verify function with loading state
        const originalVerifySignature = window.verifySignature;
        window.verifySignature = async function() {
            const loadingEl = document.getElementById('verifyLoading');
            const resultEl = document.getElementById('verifyResult');
            
            loadingEl.classList.add('show');
            resultEl.style.display = 'none';
            
            try {
                await originalVerifySignature();
            } finally {
                loadingEl.classList.remove('show');
            }
        };

        // Override the verify result display
        const originalFillResult = function(isValid, error = null) {
            const resultDiv = document.getElementById('verifyResult');
            
            if (error) {
                resultDiv.innerHTML = `
                    <i class="fas fa-exclamation-triangle verify-icon"></i>
                    <div>
                        <strong>Verification Error</strong><br>
                        <small>${error}</small>
                    </div>
                `;
                resultDiv.className = 'verify-result error';
            } else if (isValid) {
                resultDiv.innerHTML = `
                    <i class="fas fa-check-circle verify-icon"></i>
                    <div>
                        <strong>Signature is VALID</strong><br>
                        <small>The file is authentic and has not been tampered with</small>
                    </div>
                `;
                resultDiv.className = 'verify-result valid';
            } else {
                resultDiv.innerHTML = `
                    <i class="fas fa-times-circle verify-icon"></i>
                    <div>
                        <strong>Signature is INVALID</strong><br>
                        <small>The file may have been modified or the signature is incorrect</small>
                    </div>
                `;
                resultDiv.className = 'verify-result invalid';
            }
        };
    </script>
</body>
</html>